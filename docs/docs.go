// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2018-01-24 10:49:56.6657797 -0200 -02 m=+0.198998601

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "API para gerênciar a busca de leilões.",
        "title": "Some API",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "basePath": "/v1",
    "paths": {
        "/api/models": {
            "get": {
                "description": "Get something by filter.",
                "produces": [
                    "application/json"
                ],
                "summary": "Search something.",
                "parameters": [
                    {
                        "type": "int",
                        "description": "Size",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "int",
                        "description": "From",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Model"
                        }
                    },
                    "400": {
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "401": {
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        },
        "/api/models/": {
            "get": {
                "description": "Gets something by id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Search something by id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "modelID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Model"
                        }
                    },
                    "400": {
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Error"
                        }
                    },
                    "401": {
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Error": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                }
            }
        },
        "models.Model": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
